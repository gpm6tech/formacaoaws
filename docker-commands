$ docker run ubuntu:22.04 - rodando container com base na imagem ubuntu 22.04 baixando do docker hub com a tag da versão específica - direto no terminal do vs code
$ docker run -ti ubuntu:22.04 - parametro -ti para lançar um terminal e interagir com o container
  $ Dockerfile - utilizado para construir/personalizar a imagem (criando um arquivo na pasta de tabalho atual no vs code)
    FROM ubuntu:22.04 - $ docker build -t aula-docker .   - roda a imagem e o ponto no final aponta o contexto para saber de onde serão referenciadas as informações para construir a imagem, procurando assim no diretório atual pelo arquivo dockerfile
                        $ docker run -ti aula-docker     - executa o container com base na imagem construída a partir do ubunt 22.04, neste caso posso criar pastas e arquivos de teste, porém ao sair (exit)
                                                          do container essas alterações não persistiram pois único parâmetro que existe no dockerfile é a criação da imagem a partir do ubuntu, com isso tudo
                                                          que eu quiser que exista no meu container precisa existir no dockerfile no momento da criação da imagem.
    COPY . .  - esse comando ponto e ponto copia tudo que está local para dentro do container na sua criação
    COPY teste . - esse outro exemplo copiando o conteudo de uma pasta local para dentro do container na sua criação
    RUN apt-get update -y - exemplo de evolução da imagem instalando o git
    RUN apt-get git -y
$ docker ps - via terminal lista o containers em execução
$ docker stop+id do container - via terminal para container em execução

#No exemplo abaixo o Dockerfile-nginx sobe a imagem a partir do nginx (que tb é referenciado no docker hub) copiando a pasta local meu_html e seu conteudo para o destino html do pr[oprio nginx,
após o build do container (meu-nginx) com parametro -f especificando que é a partir do dockerfile-nginx, e depois o run com parâmetros -d (desattached) e -p indicando a porta TCP.

Dockerfile-nginx
FROM nginx
COPY meu_html /usr/share/nginx/html

$ docker build -t meu-nginx -f Dockerfile-nginx .
$ docker run -d -p 8082:80 meu-nginx 
  
LISTA COMANDOS DOCKER
1 - docker run : executar a sua imagem (-d roda em segundo plano) (--rm quando parar o container ele descarta totalmente container) (--name adiciona nome ao container) (-p adiciona porta) (-v utilizando volume)
2 - docker ps : listar os containers em execução (-a mostra os containers que estão parados) 
3 - docker stop/start : para/ligar o container (nome/id/parte do id para parar container)
4 - docker rm  : para o container manualmente (para não constar como parado)
5 - docker pull : baixa imagem sem rodar, utilizando o tag (docker pul httpd:latest)
6 - docker exec : executar algum comendo no container, ex: entar via bash   (-ti nome/ID bash)
7 - docker volume : executar comandos associados aos volumer, ex. listar os volumes disponíveis (associados ou não ao container)  (--help >create, inspect, ls, prune, rm)
8 - docker inspect : Inpecionar um determninado recuros, ex. onde está o meu volume?
9 - docker logs : mostra os logs da execução do container (+ iniciais do container ID) (-f mostra logs em tempo real)
10 - docker --help : lista de comando com as descrições de uso
